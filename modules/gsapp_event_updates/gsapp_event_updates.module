<?php

function gsapp_event_updates_help($path, $arg) {
  $output = '';
  switch ($path) {
    case "admin/help#gsapp_event_updates":
      $output = '<p>'.  t("Adds custom behavior to the default cron job to perform content updates") .'</p>';
      break;
  }
  return $output;
}

function gsapp_event_updates_perm() { 
	return array('Use GSAPP event updates');
}

function update_events_upon_cron() {
		watchdog('gsapp_event_updates', t('Starting node index job - disabled actual functionality...'), NULL, 'WATCHDOG_NOTICE', NULL);
		
		// get all nodes that are events
		// for each loop
		// if today: mark it
		// if featured on nodequeue mark it: end check for featured
		// get the next one: mark as next - exit loop
		$featured_marked = false;
		$next_marked = false;
		$today_marked = false;
		/*
		
		$ts_today = time();
		$ts_next = $ts_today + 24*60*60;
		
		// get first node from featured event nodequeue
		$featured_node = nodequeue_fetch_front(1);
		print_r($featured_node);
		
		$results = db_query("SELECT nid FROM {node} WHERE type = '%s'", 'event');
		$today_marked = false;
		while ($result = db_fetch_object($results)) {
			$node = node_load($result->nid, NULL, True);
			print "loaded " . $node->nid . "<br/>";
			// if marked today: unmark it
			$node->field_event_sys_istoday[0] = null;
			$node->field_event_sys_isnext[0] = null;
			$node->field_event_sys_isfeatured[0] = null;
			// check if today: mark it
			
			// if featured: mark it, prevent checking future featured nodes
			watchdog('gsapp_event_updates', t('updated node' . $node->nid), NULL, 'WATCHDOG_NOTICE', NULL);
			
			node_save(&$node);
		}

		watchdog('gsapp_event_updates', t('Finishing node index job'), NULL, 'WATCHDOG_NOTICE', NULL);
		*/
		
}
